[tools]
python = "latest"
zig = "latest"
bun = "latest"

[env]
# 默认环境变量，可以被命令行覆盖
# 自动获取 AWS 账号 ID，拼出 ECR registry
ECR_REGISTRY = "912951144733.dkr.ecr.us-west-2.amazonaws.com"

# ===============================================
# 初始化任务 创建初始用户
# ===============================================

[tasks.pre]
description = "初始化新服务器 - 创建 deploy 用户, 用法: mise run pre <server_ip> [user]"
run = """
echo "🚀 初始化服务器 {{arg(name="server_ip")}} (user={{arg(name="user", default="root")}})..."
rsync -chazP ./scripts/create-init-user.sh {{arg(name="user", default="root")}}@{{arg(name="server_ip")}}:
ssh {{arg(name="user", default="root")}}@{{arg(name="server_ip")}} 'bash create-init-user.sh'
"""

[tasks.setup]
description = "设置开发环境"
run = "pip install -r requirements-dev.txt"



[tasks.dev]
description = "通过 Bun 运行 dev 应用， mise dev bun-hello, mise dev app-name"
run = "bun run --filter={{arg(name='filter')}} dev"
raw = true

[tasks.build]
description = "通过 Bun 运行 build 应用， mise build bun-hello, mise build app-name"
run = "bun run --filter={{arg(name='filter')}} build"


[tasks.docker-build]
description = "构建并标记 Docker 镜像用于 ECR 推送, mise docker-build app-name"
run = """
docker build -f ./docker/bun/Dockerfile --platform linux/amd64 --target app -t {{arg(name='app')}} --build-arg APP={{arg(name='app')}} .
docker tag {{arg(name='app')}} $ECR_REGISTRY/{{arg(name='app')}}:{{arg(name='tag', default='latest')}}
"""

[tasks.docker-push]
description = "推送 Docker 镜像到 ECR, mise docker-push app-name"
depends = ["login-ecr"]
run = "docker push $ECR_REGISTRY/{{arg(name='app')}}:{{arg(name='tag', default='latest')}}"

[tasks.docker-deploy]
description = "完整的构建和部署流程, mise docker-deploy app-name"
run = """
# 登录 ECR
aws ecr get-login-password --region us-west-2 | docker login --username AWS --password-stdin $ECR_REGISTRY

# 构建镜像
docker build -f ./docker/bun/Dockerfile --platform linux/amd64 --target app -t {{arg(name='app')}} --build-arg APP={{arg(name='app')}} .

# 标记镜像
docker tag {{arg(name='app')}} $ECR_REGISTRY/{{arg(name='app')}}:{{arg(name='tag', default='latest')}}

# 推送镜像
docker push $ECR_REGISTRY/{{arg(name='app')}}:{{arg(name='tag', default='latest')}}
"""



[tasks.install-ansible-deps]
description = "安装 Ansible 依赖"
run = [
  "ansible-galaxy install -r ./ansible/requirements.yml --roles-path ~/.ansible/roles",
  "ansible-galaxy collection install -r ./ansible/requirements.yml"
]
[tasks.create-ecr]
description = "创建 ECR 仓库 mise create-ecr app-name"
run = "aws ecr create-repository --repository-name {{arg(name='repo')}}"


[tasks.login-ecr]
description = "登录 ECR"
run = "aws ecr get-login-password --region us-west-2 | docker login --username AWS --password-stdin $ECR_REGISTRY"


[tasks.deploy-hello]
description = "部署 hello world"
run = "ansible-playbook ansible/playbooks/bun-hello.yml -i ansible/inventory.ini"



[tasks.bootstrapserver]
description = "初始化一台服务器"
run = "ansible-playbook ansible/playbooks/bootstrap.yml -i ansible/inventory.ini --ask-pass"

[tasks.bootstrapserverwithoutpass]
description = "初始化一台服务器, 无需密码"
run = "ansible-playbook ansible/playbooks/infra.yml"


