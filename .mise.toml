[tools]
python = "latest"
zig = "latest"
bun = "latest"

[env]
# AWS ECR registry
ECR_REGISTRY = "912951144733.dkr.ecr.us-west-2.amazonaws.com"

# ===============================================
# 初始化任务
# ===============================================

[tasks.pre]
description = "初始化新服务器"
run = """
rsync -chazP ./scripts/create-init-user.sh {{arg(name="user", default="root")}}@{{arg(name="server_ip")}}:
ssh {{arg(name="user", default="root")}}@{{arg(name="server_ip")}} 'bash create-init-user.sh'
"""

[tasks.setup]
description = "设置开发环境"
run = "pip install -r requirements-dev.txt"

[tasks.dev]
description = "运行开发应用"
run = """
cd js-apps/{{arg(name="app_name")}}
bun run dev
"""

[tasks.build]
description = "构建应用"
run = """
cd js-apps/{{arg(name="app_name")}}
bun run build
"""

[tasks.test]
description = "运行测试"
run = """
cd js-apps/{{arg(name="app_name")}}
bun test
"""

# ===============================================
# Docker 相关
# ===============================================

[tasks.login-ecr]
description = "登录 ECR"
run = "aws ecr get-login-password --region us-west-2 | docker login --username AWS --password-stdin $ECR_REGISTRY"

[tasks.deploy-hello]
description = "部署 hello world"
run = "ansible-playbook ansible/playbooks/bun-hello.yml -i ansible/inventory.ini"

# ===============================================
# 服务器初始化
# ===============================================

[tasks.bootstrapserver]
description = "初始化服务器"
run = "ansible-playbook ansible/playbooks/bootstrap.yml -i ansible/inventory.ini --ask-pass"

[tasks.bootstrapserverwithoutpass]
description = "初始化服务器（无密码）"
run = "ansible-playbook ansible/playbooks/infra.yml"

# ===============================================
# 基础设施部署
# ===============================================

[tasks.postgres]
description = "部署 PostgreSQL"
run = "ansible-playbook ansible/playbooks/deploy-postgres-infra.yml"

[tasks.redis]
description = "部署 Redis"
run = "ansible-playbook ansible/playbooks/deploy-redis-infra.yml"

[tasks.caddy]
description = "部署 Caddy"
run = "ansible-playbook ansible/playbooks/deploy-caddy-infra.yml"


[tasks.deploy-app]
description = "部署应用"
run = "ansible-playbook ansible/playbooks/deploy-app-standalone.yml --extra-vars app_name={{arg(name='app_name')}}"

# ===============================================
# 环境变量同步
# ===============================================

[tasks.env]
description = "同步开发环境变量"
run = """
PROJECT=$(basename "$PWD")
aws ssm get-parameter --name "/$PROJECT/.env" --with-decryption --query 'Parameter.Value' --output text > .env
echo "开发环境已同步到 .env"
"""

[tasks.prod]
description = "同步生产环境变量"
run = """
PROJECT=$(basename "$PWD")
aws ssm get-parameter --name "/$PROJECT/.env.prod" --with-decryption --query 'Parameter.Value' --output text > .env.prod  
echo "生产环境已同步到 .env.prod"
"""


[tasks.run-db-task]  
description = "执行数据库任务"
run = """
TASK_FILE="{{arg(name='task_file')}}"
if [ -z "$TASK_FILE" ]; then
    echo "请指定任务文件名（包含.sql后缀）"
    echo "使用方法: mise run-db-task task_file=20250912-create-test-database.sql"
    exit 1
fi

ansible-playbook ansible/playbooks/deploy-database-tasks-infra.yml \
  --extra-vars "task_name=$TASK_FILE"
"""

